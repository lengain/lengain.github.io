<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.2.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/all.min.css">

<script id="hexo-configurations">
    var NexT = window.NexT || {};
    var CONFIG = {"hostname":"lengain.github.io","root":"/","scheme":"Gemini","version":"7.8.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12,"onmobile":false},"copycode":{"enable":false,"show_result":false,"style":null},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"bookmark":{"enable":false,"color":"#222","save":"auto"},"fancybox":false,"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"algolia":{"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"localsearch":{"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"path":"search.xml"};
  </script>

  <meta name="description" content="方法名后缀为”!”的方法在Ruby中，方法名后缀为”!”的方法通常表示该方法会修改调用它的对象。这种约定起源于Smalltalk语言，在Ruby中广泛使用。 当一个方法后面带有”!”符号时，这个方法通常会修改调用它的对象的状态。例如，如果我们对一个数组调用sort!方法，这个方法会对数组进行排序，并返回排序后的数组，而原始数组将被修改。">
<meta property="og:type" content="article">
<meta property="og:title" content="Ruby方法中的!和?">
<meta property="og:url" content="http://lengain.github.io/2023/12/11/Ruby%E6%96%B9%E6%B3%95%E4%B8%AD%E7%9A%84!%E5%92%8C">
<meta property="og:site_name" content="时光地下铁">
<meta property="og:description" content="方法名后缀为”!”的方法在Ruby中，方法名后缀为”!”的方法通常表示该方法会修改调用它的对象。这种约定起源于Smalltalk语言，在Ruby中广泛使用。 当一个方法后面带有”!”符号时，这个方法通常会修改调用它的对象的状态。例如，如果我们对一个数组调用sort!方法，这个方法会对数组进行排序，并返回排序后的数组，而原始数组将被修改。">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2023-12-11T12:26:24.000Z">
<meta property="article:modified_time" content="2024-03-11T03:13:42.476Z">
<meta property="article:author" content="Lengain">
<meta property="article:tag" content="Ruby">
<meta name="twitter:card" content="summary">

<link rel="canonical" href="http://lengain.github.io/2023/12/11/Ruby%E6%96%B9%E6%B3%95%E4%B8%AD%E7%9A%84!%E5%92%8C">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome : false,
    isPost : true,
    lang   : 'zh-CN'
  };
</script>

  <title>Ruby方法中的!和? | 时光地下铁</title>
  






  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <span class="logo-line-before"><i></i></span>
      <h1 class="site-title">时光地下铁</h1>
      <span class="logo-line-after"><i></i></span>
    </a>
      <p class="site-subtitle" itemprop="description">走走停停，看看风景</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger">
    </div>
  </div>
</div>




<nav class="site-nav">
  <ul id="menu" class="main-menu menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-home fa-fw"></i>首页</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>标签</a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>归档</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>关于</a>

  </li>
  </ul>
</nav>




</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content post posts-expand">
            

    
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="http://lengain.github.io/2023/12/11/Ruby%E6%96%B9%E6%B3%95%E4%B8%AD%E7%9A%84!%E5%92%8C?/">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.jpeg">
      <meta itemprop="name" content="Lengain">
      <meta itemprop="description" content="所谓成功只有一个—按照自己的方式，去度过人生">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="时光地下铁">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          Ruby方法中的!和?
        </h1>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-calendar"></i>
              </span>
              <span class="post-meta-item-text">发表于</span>

              <time title="创建时间：2023-12-11 20:26:24" itemprop="dateCreated datePublished" datetime="2023-12-11T20:26:24+08:00">2023-12-11</time>
            </span>

          

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
        <h5 id="方法名后缀为”-”的方法"><a href="#方法名后缀为”-”的方法" class="headerlink" title="方法名后缀为”!”的方法"></a>方法名后缀为”!”的方法</h5><p>在Ruby中，方法名后缀为”!”的方法通常表示该方法会修改调用它的对象。这种约定起源于Smalltalk语言，在Ruby中广泛使用。</p>
<p>当一个方法后面带有”!”符号时，这个方法通常会修改调用它的对象的状态。例如，如果我们对一个数组调用<code>sort!</code>方法，这个方法会对数组进行排序，并返回排序后的数组，而原始数组将被修改。</p>
<a id="more"></a>

<p>下面是一个例子：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rubynumbers = [<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">sorted_numbers = numbers.sort! </span><br><span class="line"><span class="comment"># 修改原始数组，并返回排序后的数组  </span></span><br><span class="line"><span class="comment"># puts numbers </span></span><br><span class="line"><span class="comment"># 输出: [1, 2, 3]  </span></span><br><span class="line"><span class="comment"># puts sorted_numbers </span></span><br><span class="line"><span class="comment"># 输出: [1, 2, 3]</span></span><br></pre></td></tr></table></figure>

<p>在这个例子中，<code>sort!</code>方法修改了原始数组<code>numbers</code>的状态，并返回了排序后的数组。</p>
<p>需要注意的是，有些方法同时有带”!”和不带”!”的版本。例如，<code>sort</code>方法不会修改原始数组，而是返回一个新的排序后的数组。因此，我们需要仔细查看方法的文档来了解它们的行为。</p>
<h5 id="方法名后缀为”-”的方法-1"><a href="#方法名后缀为”-”的方法-1" class="headerlink" title="方法名后缀为”?”的方法"></a>方法名后缀为”?”的方法</h5><p>在Ruby中，以”?”结尾的方法通常表示该方法返回一个布尔值（true或false）。这种约定使得代码更加可读和易于理解。</p>
<p>例如，Ruby中有很多方法以”?”结尾，如<code>nil?</code>、<code>empty?</code>、<code>blank?</code>等。这些方法通常用于条件判断，根据给定的条件返回true或false。</p>
<p>以下是一些示例：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用nil?方法判断变量是否为nil  </span></span><br><span class="line"><span class="keyword">if</span> my_variable.<span class="literal">nil</span>?    </span><br><span class="line">    puts <span class="string">&quot;my_variable is nil&quot;</span>  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    puts <span class="string">&quot;my_variable is not nil&quot;</span></span><br><span class="line"><span class="keyword">end</span>    </span><br><span class="line"><span class="comment"># 使用empty?方法判断字符串是否为空  </span></span><br><span class="line"><span class="keyword">if</span> my_string.empty?</span><br><span class="line">    puts <span class="string">&quot;my_string is empty&quot;</span>  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    puts <span class="string">&quot;my_string is not empty&quot;</span>  </span><br><span class="line"><span class="keyword">end</span>    </span><br><span class="line"><span class="comment"># 使用blank?方法判断字符串是否为空白（只包含空格、制表符等空白字符）</span></span><br><span class="line"><span class="keyword">if</span> my_string.blank?</span><br><span class="line">    puts <span class="string">&quot;my_string is blank&quot;</span>  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    puts <span class="string">&quot;my_string is not blank&quot;</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>在这些示例中，通过调用以”?”结尾的方法，我们可以根据条件判断得到相应的结果。这些方法通常用于控制程序流程，根据条件执行相应的操作。</p>
<h5 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h5><p>在Ruby中，反引号用于执行shell命令，并将执行结果作为字符串返回。以下是反引号的使用方法：</p>
<ol>
<li>反引号包围一个shell命令，Ruby会执行该命令，并将执行结果作为字符串返回。</li>
<li>使用<code>puts</code>方法打印该变量的值。</li>
</ol>
<p>例如：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output=<span class="string">`ls -l`</span>  </span><br><span class="line">puts output</span><br></pre></td></tr></table></figure>

<p>在上述代码中，<code>ls -l</code>命令会在shell中执行，并返回结果。然后，将结果赋值给变量output，并使用puts方法打印该变量的值。</p>

    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/Ruby/" rel="tag"># Ruby</a>
          </div>

        


        
    <div class="post-nav">
      <div class="post-nav-item">
    <a href="/2023/08/18/%E6%8D%A2%E4%BA%86%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E7%BD%91%E7%AB%99%E5%9B%BE%E6%A0%87/" rel="prev" title="换了一个新的网站图标">
      <i class="fa fa-chevron-left"></i> 换了一个新的网站图标
    </a></div>
      <div class="post-nav-item">
    <a href="/2023/12/13/%E4%B8%80%E4%B8%AANSObject%E5%AF%B9%E8%B1%A1%E5%8D%A0%E7%94%A8%E5%A4%9A%E5%B0%91%E5%86%85%E5%AD%98/" rel="next" title="一个NSObject对象占用多少内存">
      一个NSObject对象占用多少内存 <i class="fa fa-chevron-right"></i>
    </a></div>
    </div>
      </footer>
    
  </article>
  
  
  



          </div>
          

<script>
  window.addEventListener('tabs:register', () => {
    let { activeClass } = CONFIG.comments;
    if (CONFIG.comments.storage) {
      activeClass = localStorage.getItem('comments_active') || activeClass;
    }
    if (activeClass) {
      let activeTab = document.querySelector(`a[href="#comment-${activeClass}"]`);
      if (activeTab) {
        activeTab.click();
      }
    }
  });
  if (CONFIG.comments.storage) {
    window.addEventListener('tabs:click', event => {
      if (!event.target.matches('.tabs-comment .tab-content .tab-pane')) return;
      let commentClass = event.target.classList[1];
      localStorage.setItem('comments_active', commentClass);
    });
  }
</script>

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%96%B9%E6%B3%95%E5%90%8D%E5%90%8E%E7%BC%80%E4%B8%BA%E2%80%9D-%E2%80%9D%E7%9A%84%E6%96%B9%E6%B3%95"><span class="nav-number">1.</span> <span class="nav-text">方法名后缀为”!”的方法</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%96%B9%E6%B3%95%E5%90%8D%E5%90%8E%E7%BC%80%E4%B8%BA%E2%80%9D-%E2%80%9D%E7%9A%84%E6%96%B9%E6%B3%95-1"><span class="nav-number">2.</span> <span class="nav-text">方法名后缀为”?”的方法</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%8F%8D%E5%BC%95%E5%8F%B7"><span class="nav-number">3.</span> <span class="nav-text">反引号</span></a></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Lengain"
      src="/images/avatar.jpeg">
  <p class="site-author-name" itemprop="name">Lengain</p>
  <div class="site-description" itemprop="description">所谓成功只有一个—按照自己的方式，去度过人生</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">32</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">11</span>
        <span class="site-state-item-name">标签</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/lengain" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;lengain" rel="noopener" target="_blank"><i class="fab fa-github fa-fw"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:lengain@yeah.net" title="E-Mail → mailto:lengain@yeah.net" rel="noopener" target="_blank"><i class="fa fa-envelope fa-fw"></i>E-Mail</a>
      </span>
  </div>


  <div class="links-of-blogroll motion-element">
    <div class="links-of-blogroll-title"><i class="fa fa-book fa-fw"></i>
      Links
    </div>
    <ul class="links-of-blogroll-list">
        <li class="links-of-blogroll-item">
          <a href="https://casatwy.com/" title="https:&#x2F;&#x2F;casatwy.com&#x2F;" rel="noopener" target="_blank">casatwy</a>
        </li>
        <li class="links-of-blogroll-item">
          <a href="https://www.jianshu.com/u/96a14318a4de" title="https:&#x2F;&#x2F;www.jianshu.com&#x2F;u&#x2F;96a14318a4de" rel="noopener" target="_blank">iOS程序猿</a>
        </li>
        <li class="links-of-blogroll-item">
          <a href="http://blog.cnbang.net/" title="http:&#x2F;&#x2F;blog.cnbang.net&#x2F;" rel="noopener" target="_blank">Bang's Blog</a>
        </li>
        <li class="links-of-blogroll-item">
          <a href="http://qidiandasheng.com/" title="http:&#x2F;&#x2F;qidiandasheng.com&#x2F;" rel="noopener" target="_blank">qidiandasheng的博客</a>
        </li>
        <li class="links-of-blogroll-item">
          <a href="http://gc1234.top/" title="http:&#x2F;&#x2F;gc1234.top&#x2F;" rel="noopener" target="_blank">疯狂的兔子</a>
        </li>
    </ul>
  </div>

      </div>

    </div>
  </aside>
  <div id="sidebar-dimmer"></div>


      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2024</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">lengain.github.io</span>
</div>

        








      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>




  
  <script>
    (function(){
      var canonicalURL, curProtocol;
      //Get the <link> tag
      var x=document.getElementsByTagName("link");
		//Find the last canonical URL
		if(x.length > 0){
			for (i=0;i<x.length;i++){
				if(x[i].rel.toLowerCase() == 'canonical' && x[i].href){
					canonicalURL=x[i].href;
				}
			}
		}
    //Get protocol
	    if (!canonicalURL){
	    	curProtocol = window.location.protocol.split(':')[0];
	    }
	    else{
	    	curProtocol = canonicalURL.split(':')[0];
	    }
      //Get current URL if the canonical URL does not exist
	    if (!canonicalURL) canonicalURL = window.location.href;
	    //Assign script content. Replace current URL with the canonical URL
      !function(){var e=/([http|https]:\/\/[a-zA-Z0-9\_\.]+\.baidu\.com)/gi,r=canonicalURL,t=document.referrer;if(!e.test(r)){var n=(String(curProtocol).toLowerCase() === 'https')?"https://sp0.baidu.com/9_Q4simg2RQJ8t7jm9iCKT-xh_/s.gif":"//api.share.baidu.com/s.gif";t?(n+="?r="+encodeURIComponent(document.referrer),r&&(n+="&l="+r)):r&&(n+="?l="+r);var i=new Image;i.src=n}}(window);})();
  </script>















  

  

</body>
</html>
